
@using System.Globalization
@using RMS.Web.Areas.App.Models.Common.Modals
@using RMS.Web.Areas.App.Models.RegistrationStatuses
@model CreateOrEditRegistrationStatusModalViewModel

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditRegistrationStatus")) : L("CreateNewRegistrationStatus")))

<div class="modal-body">
        <div id="RegistrationStatusInformationsTab">
            <form name="RegistrationStatusInformationsForm" role="form" novalidate class="form-validation">

                @if (Model.IsEditMode)
                {
                    <input type="hidden" name="id" value="@Model.RegistrationStatus.Id" />
                }

				

				
								<div class="form-group">
									<label for="RegistrationStatus_StatusCode">@L("StatusCode")</label>
									<input class="form-control" id="RegistrationStatus_StatusCode" value="@Model.RegistrationStatus.StatusCode" type="text" name="statusCode"  required    />
								</div>
					
								<div class="form-group">
									<label for="RegistrationStatus_Description">@L("Description")</label>
									<input class="form-control" id="RegistrationStatus_Description" value="@Model.RegistrationStatus.Description" type="text" name="description"  required    />
								</div>
					
								<div class="m-checkbox-list">
									<label for="RegistrationStatus_IsActive" class="kt-checkbox">
										<input id="RegistrationStatus_IsActive" type="checkbox" name="isActive" value="true" @Html.Raw(Model.RegistrationStatus.IsActive ?"checked=\"checked\"":"") />
										@L("IsActive")
										<span></span>
									</label>
								</div>
					

            </form>
        </div>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")

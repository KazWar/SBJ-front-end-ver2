
@using System.Globalization
@using RMS.Web.Areas.App.Models.Common.Modals
@using RMS.Web.Areas.App.Models.Companies
@model CreateOrEditCompanyModalViewModel

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditCompany")) : L("CreateNewCompany")))

<div class="modal-body">
        <div id="CompanyInformationsTab">
            <form name="CompanyInformationsForm" role="form" novalidate class="form-validation">

                @if (Model.IsEditMode)
                {
                    <input type="hidden" name="id" value="@Model.Company.Id" />
                }

				            
								<div class="form-group m-form__group">
										<label for="AddressPostalCode">@L("Address")</label>
									    <div class="input-group">
											<input class="form-control" id="AddressPostalCode" name="addressPostalCode" value="@Model.AddressPostalCode" type="text" disabled>
										<div class="input-group-append">
											<button class="btn btn-primary blue" id="OpenAddressLookupTableButton" type="button"><i class="fa fa-search"></i> @L("Pick")</button>
										</div> 
										<div class="input-group-prepend">
											<button class="btn btn-danger btn-icon" type="button" id="ClearAddressPostalCodeButton"><i class="fa fa-times"></i></button>
										</div>
									</div>
								</div>

								@if (Model.IsEditMode)
								{
									<input class="form-control" id="Company_AddressId" value="@Model.Company.AddressId" type="text" name="addressId" required hidden/>
								}
								 else
								{ 
									<input class="form-control" id="Company_AddressId" value="" type="text" name="addressId" required hidden/>
								}



				
								<div class="form-group">
									<label for="Company_Name">@L("Name")</label>
									<input class="form-control" id="Company_Name" value="@Model.Company.Name" type="text" name="name"  required  maxlength="@RMS.SBJ.Company.CompanyConsts.MaxNameLength"  minlength="@RMS.SBJ.Company.CompanyConsts.MinNameLength"  />
								</div>
					
								<div class="form-group">
									<label for="Company_PhoneNumber">@L("PhoneNumber")</label>
									<input class="form-control" id="Company_PhoneNumber" value="@Model.Company.PhoneNumber" type="text" name="phoneNumber"     />
								</div>
					
								<div class="form-group">
									<label for="Company_EmailAddress">@L("EmailAddress")</label>
									<input class="form-control" id="Company_EmailAddress" value="@Model.Company.EmailAddress" type="text" name="emailAddress"     pattern="@RMS.SBJ.Company.CompanyConsts.EmailAddressRegex" />
								</div>
					
								<div class="form-group">
									<label for="Company_BICCashBack">@L("BICCashBack")</label>
									<input class="form-control" id="Company_BICCashBack" value="@Model.Company.BICCashBack" type="text" name="bicCashBack"     pattern="@RMS.SBJ.Company.CompanyConsts.BicCashBackRegex" />
								</div>
					
								<div class="form-group">
									<label for="Company_IBANCashBack">@L("IBANCashBack")</label>
									<input class="form-control" id="Company_IBANCashBack" value="@Model.Company.IBANCashBack" type="text" name="ibanCashBack"     pattern="@RMS.SBJ.Company.CompanyConsts.IbanCashBackRegex" />
								</div>
					

            </form>
        </div>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")

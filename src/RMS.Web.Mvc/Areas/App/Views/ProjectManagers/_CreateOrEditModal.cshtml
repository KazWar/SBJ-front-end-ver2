
@using System.Globalization
@using RMS.Web.Areas.App.Models.Common.Modals
@using RMS.Web.Areas.App.Models.ProjectManagers
@model CreateOrEditProjectManagerModalViewModel

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditProjectManager")) : L("CreateNewProjectManager")))

<div class="modal-body">
        <div id="ProjectManagerInformationsTab">
            <form name="ProjectManagerInformationsForm" role="form" novalidate class="form-validation">

                @if (Model.IsEditMode)
                {
                    <input type="hidden" name="id" value="@Model.ProjectManager.Id" />
                }

				

				
								<div class="form-group">
									<label for="ProjectManager_Name">@L("Name")</label>
									<input class="form-control" id="ProjectManager_Name" value="@Model.ProjectManager.Name" type="text" name="name"  required    />
								</div>
					
								<div class="form-group">
									<label for="ProjectManager_PhoneNumber">@L("PhoneNumber")</label>
									<input class="form-control" id="ProjectManager_PhoneNumber" value="@Model.ProjectManager.PhoneNumber" type="text" name="phoneNumber"   maxlength="@RMS.SBJ.Company.ProjectManagerConsts.MaxPhoneNumberLength"  minlength="@RMS.SBJ.Company.ProjectManagerConsts.MinPhoneNumberLength"  />
								</div>
					
								<div class="form-group">
									<label for="ProjectManager_EmailAddress">@L("EmailAddress")</label>
									<input class="form-control" id="ProjectManager_EmailAddress" value="@Model.ProjectManager.EmailAddress" type="text" name="emailAddress"     pattern="@RMS.SBJ.Company.ProjectManagerConsts.EmailAddressRegex" />
								</div>
					

            </form>
        </div>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")

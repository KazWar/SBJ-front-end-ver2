@using RMS.Authorization
@using RMS.Web.Areas.App.Models.MessageComponentContents
@using RMS.SBJ.CampaignProcesses.Dtos
@using RMS.Web.Areas.App.Startup
@model MessageComponentContentsViewModel
@{ var MailList = new List<GetMessageComponentContentForViewDto>();
    var WhatsAppList = new List<GetMessageComponentContentForViewDto>();
}

<head>
    <script src="~/view-resources/Areas/App/Views/MessageComponentContents/_MessageComponentContent.js"></script>
</head>

<body>
    <div id="dvMessageComponentContent">
        <input id="localeId" hidden data-locale-id="@Model.LocaleId" />
        @{
            var groupedList = Model.MessageComponentContents.Items.GroupBy(item => item.MessageComponentContent.CampaignTypeEventRegistrationStatusId)
                                                                              .Select(g => new { g.Key, mcc = g.OrderBy(y => y.MessageComponentContent.Id) }).ToList();
        }
        @if (groupedList.Count() > 0)
        {
            <table id="table__message-component-contents"
                   class="table-striped table-bordered table-hover dt-responsive nowrap dataTable no-footer dtr-column text-center" role="grid" aria-describedby="MessageComponentContentsTable_info">
                <thead>
                    <tr role="row">
                        <th class="sorting_disabled">@L("MessageType")</th>
                        <th class="sorting" tabindex="0" aria-controls="MessageComponentContentsTable" rowspan="1" colspan="1">@L("ID")</th>
                        <th class="sorting" tabindex="0" aria-controls="MessageComponentContentsTable" rowspan="1" colspan="1">@L("CampaignType")</th>
                        <th class="sorting" tabindex="0" aria-controls="MessageComponentContentsTable" rowspan="1" colspan="1">@L("ProcessEvent")</th>
                        <th class="sorting" tabindex="0" aria-controls="MessageComponentContentsTable" rowspan="1" colspan="1">@L("RegistrationStatus")</th>
                        <th class="sorting_disabled">@L("Actions")</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in groupedList)
                    {
                        @foreach (var mccItem in item.mcc)
                        {
                            var messageComponent = Model.MessageComponents.Items.Where(msgcmpts => msgcmpts.MessageTypeName == mccItem.MessageType && msgcmpts.MessageComponentTypeName == mccItem.MessageComponentType).LastOrDefault();
                            @if (messageComponent?.MessageTypeName.ToLower() == "mail")
                            {
                                MailList.Add(mccItem);
                            }
                            else if (messageComponent?.MessageTypeName.ToLower() == "whatsapp")
                            {
                                WhatsAppList.Add(mccItem);
                            }
                        }
                    }

                    @{
                        var groupedMailList = MailList.GroupBy(item => item.MessageComponentContent.CampaignTypeEventRegistrationStatusId)
                            .Select(g => new { g.Key, mcc = g.OrderBy(y => y.MessageComponentContent.Id) }).ToList();
                        var groupedWhatsAppList = WhatsAppList.GroupBy(item => item.MessageComponentContent.CampaignTypeEventRegistrationStatusId)
                            .Select(g => new { g.Key, mcc = g.OrderBy(y => y.MessageComponentContent.Id) }).ToList();
                    }

                    @if (groupedMailList.Count() > 0)
                    {
                        @foreach (var mccItem in groupedMailList)
                        {
                            GetCampaignTypeEventRegistrationStatusForViewDto linkedCampaignTypeEventRegistrationStatus =
                            Model.CampaignTypeEventRegistrationStatuses.Items
                            .FirstOrDefault(cters => cters.CampaignTypeEventRegistrationStatus.Id == mccItem.mcc.FirstOrDefault().MessageComponentContent.CampaignTypeEventRegistrationStatusId);
                            GetMessageComponentForViewDto linkedMessageComponent =
                            Model.MessageComponents.Items
                            .FirstOrDefault(mc => mc.MessageTypeName == mccItem.mcc.FirstOrDefault().MessageComponentContent.MessageType && mc.MessageComponentTypeName == mccItem.mcc.FirstOrDefault().MessageComponentContent.MessageComponentType);
                            GetCampaignTypeEventForViewDto linkedCampaignTypeEvent =
                                Model.CampaignTypeEvents.Items
                                .FirstOrDefault(cte => cte.CampaignTypeEvent.Id == linkedCampaignTypeEventRegistrationStatus?.CampaignTypeEventRegistrationStatus?.CampaignTypeEventId);

                            if (linkedCampaignTypeEventRegistrationStatus == null || linkedMessageComponent == null || linkedCampaignTypeEvent == null)
                            {
                                continue;
                            }

                            <tr role="row">
                                <td tabindex="0">
                                    @switch (linkedMessageComponent.MessageTypeName.ToLower())
                                    {
                                        case "whatsapp":
                                            <i class="fab fa-whatsapp" data-toggle="tooltip" data-placement="right" title="WhatsApp"></i>
                                            break;
                                        default:
                                            <i class="far fa-envelope" data-toggle="tooltip" data-placement="right" title="Email"></i>
                                            break;
                                    }
                                </td>
                                <td>@mccItem.mcc.FirstOrDefault().MessageComponentContent.CampaignTypeEventRegistrationStatusId</td>
                                <td>@linkedCampaignTypeEvent.CampaignTypeName</td>
                                <td>@linkedCampaignTypeEvent.ProcessEventName</td>
                                <td>@linkedCampaignTypeEventRegistrationStatus.RegistrationStatusDescription</td>
                                <td>
                                    <button class="btn btn-primary btn__message-component-contents--edit"
                                            data-message-component-content-id="@mccItem.mcc.FirstOrDefault().MessageComponentContent.Id"
                                            data-campaign-type-event-registration-status-id="@mccItem.mcc.FirstOrDefault().MessageComponentContent.CampaignTypeEventRegistrationStatusId"
                                            data-message-type="@linkedMessageComponent.MessageTypeName">
                                        <i class="fa fa-cog"></i> @L("Edit")
                                    </button>
                                </td>
                            </tr>

                            <tr role="row">
                                <td colspan="2" style="background-color:white"></td>
                                <td style="border:1px solid #ebedf2">
                                    Header
                                    @if (Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Header").MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault() != 0)
                                    {
                                        <button style="float:right" class="btn-small btn-danger btn__message-component-contents--delete" data-message-content-translation-id="@Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Header").MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault()" data-message-component-content-id="@mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Header").MessageComponentContent.Id">
                                            <i class="fa fa-trash"></i> @L("Delete")
                                        </button>
                                    }
                                </td>
                                <td style="border:1px solid #ebedf2">
                                    Body
                                    @if (Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Body").MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault() != 0)
                                    {
                                        <button style="float:right" class="btn-small btn-danger btn__message-component-contents--delete" data-message-content-translation-id="@Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Body").MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault()" data-message-component-content-id="@mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Body").MessageComponentContent.Id">
                                            <i class="fa fa-trash"></i> @L("Delete")
                                        </button>
                                    }
                                </td>
                                <td style="border:1px solid #ebedf2">
                                    Footer
                                    @if (Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Footer").MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault() != 0)
                                    {
                                        <button style="float:right" class="btn-small btn-danger btn__message-component-contents--delete" data-message-content-translation-id="@Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Footer").MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault()" data-message-component-content-id="@mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Footer").MessageComponentContent.Id">
                                            <i class="fa fa-trash"></i> @L("Delete")
                                        </button>
                                    }
                                </td>
                                <td style="border:1px solid #ebedf2">
                                    Subject
                                    @if (Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Subject").MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault() != 0)
                                    {
                                        <button style="float:right" class="btn-small btn-danger btn__message-component-contents--delete" data-message-content-translation-id="@Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Subject").MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault()" data-message-component-content-id="@mccItem.mcc.LastOrDefault(i => i.MessageComponentType == "Subject").MessageComponentContent.Id">
                                            <i class="fa fa-trash"></i> @L("Delete")
                                        </button>
                                    }
                                </td>
                            </tr>

                            <tr role="row">
                                <td colspan="2" style="background-color:white; border-right:1px solid #ebedf2; border-top:none"></td>
                                @foreach (var mccListItem in mccItem.mcc)
                                {
                                    var messageContentTranslation = Model.MessageContentTranslations.Where(mctItem => mctItem.MessageContentTranslation.MessageComponentContentId == mccListItem.MessageComponentContent.Id &&
                                    mctItem.MessageContentTranslation.LocaleId == Model.LocaleId).LastOrDefault();
                                    if (messageContentTranslation != null)
                                    {
                                        <td class="text-wrap" style="border:1px solid #ebedf2;max-width:200px;overflow-x:auto">@messageContentTranslation.MessageContentTranslation.Content</td>
                                    }
                                    else
                                    {
                                        <td class="text-wrap" style="border:1px solid #ebedf2;max-width:200px;overflow-x:auto">@mccListItem.MessageComponentContent.Content</td>
                                    }
                                }
                            </tr>
                        }
                    }

                    @if (WhatsAppList.Count() > 0)
                    {
                        @foreach (var mccItem in WhatsAppList)
                        {
                            GetCampaignTypeEventRegistrationStatusForViewDto linkedCampaignTypeEventRegistrationStatus =
                            Model.CampaignTypeEventRegistrationStatuses.Items
                            .FirstOrDefault(cters => cters.CampaignTypeEventRegistrationStatus.Id == mccItem.MessageComponentContent.CampaignTypeEventRegistrationStatusId);
                            GetMessageComponentForViewDto linkedMessageComponent =
                            Model.MessageComponents.Items
                            .FirstOrDefault(mc => mc.MessageTypeName == mccItem.MessageType && mc.MessageComponentTypeName == mccItem.MessageComponentType);
                            GetCampaignTypeEventForViewDto linkedCampaignTypeEvent =
                                Model.CampaignTypeEvents.Items
                                .FirstOrDefault(cte => cte.CampaignTypeEvent.Id == linkedCampaignTypeEventRegistrationStatus?.CampaignTypeEventRegistrationStatus.CampaignTypeEventId);

                            if (linkedCampaignTypeEventRegistrationStatus == null || linkedMessageComponent == null || linkedCampaignTypeEvent == null)
                            {
                                continue;
                            }

                            <tr role="row">
                                <td tabindex="0">
                                    @switch (linkedMessageComponent.MessageTypeName.ToLower())
                                    {
                                        case "whatsapp":
                                            <i class="fab fa-whatsapp" data-toggle="tooltip" data-placement="right" title="WhatsApp"></i>
                                            break;
                                        default:
                                            <i class="far fa-envelope" data-toggle="tooltip" data-placement="right" title="Email"></i>
                                            break;
                                    }
                                </td>
                                <td>@mccItem.MessageComponentContent.CampaignTypeEventRegistrationStatusId</td>
                                <td>@linkedCampaignTypeEvent.CampaignTypeName</td>
                                <td>@linkedCampaignTypeEvent.ProcessEventName</td>
                                <td>@linkedCampaignTypeEventRegistrationStatus.RegistrationStatusDescription</td>
                                <td>
                                    <button class="btn btn-primary btn__message-component-contents--edit"
                                            data-message-component-content-id="@mccItem.MessageComponentContent.Id"
                                            data-campaign-type-event-registration-status-id="@mccItem.MessageComponentContent.CampaignTypeEventRegistrationStatusId"
                                            data-message-type="@linkedMessageComponent.MessageTypeName">
                                        <i class="fa fa-cog"></i> @L("Edit")
                                    </button>
                                </td>
                            </tr>
                            <tr role="row">
                                <td colspan="3" style="background-color:white"></td>
                                <td style="border:1px solid #ebedf2">
                                    Body
                                    @if (Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault() != 0)
                                    {
                                        <button style="float:right" class="btn-small btn-danger btn__message-component-contents--delete" data-message-content-translation-id="@Model.MessageContentTranslations.Where(i => i.MessageContentTranslation.LocaleId == Model.LocaleId && i.MessageContentTranslation.MessageComponentContentId == mccItem.MessageComponentContent.Id).Select(i => i.MessageContentTranslation.Id).LastOrDefault()" data-message-component-content-id="@mccItem.MessageComponentContent.Id">
                                            <i class="fa fa-trash"></i> @L("Delete")
                                        </button>
                                    }
                                </td>
                            </tr>
                            <tr role="row">
                                <td colspan="3" style="background-color:white; border-right:1px solid #ebedf2; border-top:none"></td>

                                @{
                                    var messageContentTranslation = Model.MessageContentTranslations.Where(mctItem => mctItem.MessageContentTranslation.MessageComponentContentId == mccItem.MessageComponentContent.Id &&
                                    mctItem.MessageContentTranslation.LocaleId == Model.LocaleId).LastOrDefault();
                                    if (messageContentTranslation != null)
                                    {
                                        <td class="text-wrap" style="border:1px solid #ebedf2;max-width:200px;overflow-x:auto">@messageContentTranslation.MessageContentTranslation.Content</td>
                                    }
                                    else
                                    {
                                        <td class="text-wrap" style="border:1px solid #ebedf2;max-width:200px;overflow-x:auto">@mccItem.MessageComponentContent.Content</td>
                                    }
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }
        else
        {
            <div>
                <!--Add Localization text-->
                <label>There are no Messages for the campaign currently.</label>
            </div>
        }
    </div>
</body>
